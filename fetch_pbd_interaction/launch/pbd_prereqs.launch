<launch>
	<!-- This launches everything in the PbD backend stack EXCEPT for
	PbD itself (the interaction node).

	The purpose of splitting the launch files this way is for testing,
	both manual and automated. If the interaction node goes down, it can
	be brought up separately from all of its prerequisites.
	-->

	<arg name="social_gaze" default="true" />
	<param name="social_gaze" value="$(arg social_gaze)" />
	<arg name="play_sound" default="true" />
	<param name="play_sound" value="$(arg play_sound)" />
    <arg name="camera_frame_prefix" default="/head_camera" />
    <arg name="camera_name" default="head_camera" />

	<!-- This makes the robot look around appropriately -->
	<include file="$(find fetch_social_gaze)/launch/gaze.launch"/>

	<include file="$(find fetch_pbd_interaction)/launch/pbd_web_prereqs.launch"/>

  	<include file="$(find fetch_moveit_config)/launch/move_group.launch" />

	<!-- <include file="$(find tabletop_object_detector)/launch/tabletop_segmentation.launch">
	    <arg name="tabletop_segmentation_points_in" value="$(arg camera_name)/depth_registered/points" />
	</include> -->

    <node name="rail_segmentation" pkg="rail_segmentation" type="rail_segmentation" respawn="true" output="screen">
    	<param name="point_cloud_topic" value="$(arg camera_name)/depth_registered/points" />
    	<param name="zones_config" value="$(find fetch_pbd_interaction)/config/zones.yaml" />
    	<param name="max_cluster_size" value="50000" />
    </node>

	<node name="fetch_pbd_arm_control" pkg="fetch_pbd_interaction" type="pbd_arm_control_node.py" output="screen" />
	<node name="pbd_world_node" pkg="fetch_pbd_interaction" type="pbd_world_node.py" output="screen" />

</launch>
